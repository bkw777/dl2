TPDD1 FDC-mode command "S" - Search ID Section
bkw

This is an odd command that isn't actually used by any of the main TPDD clients
as far as I've seen yet. TS-DOS, DSKMGR, TEENY, Floppy, even Sardine all worked fine
with dlplus before this command was implemented.
Particularly, this is an FDC-mode command, and the only applications that actually use FDC mode
known so far are Sardine and the installer for Disk-Power, and both of those worked with dlplus
before this command was added.

The software manual explains almost nothing about this command. It only says:

  "The procedure is similar to that for the Write Sector command,
   except that you send a search string instead of data to be written."

So here is what I have found through some trial & error with a real drive.

The process is actually more like the Write ID Section command.

 1 - client sends "S" and carriage-return
     This command takes no parameters after the S.
     dlplus silently ignores any extra characters,
     but a real drive gives error 61 if there are any extra bytes after the S.
  
 2 - drive responds with standard FDC-mode response block(a)
     If the command was valid and no hardware problem: err:0 dat:0 len:0
     If the command was malformed: err:61 dat:0 len:0

     client parses the response block

     if err>0, abort operation
       drive returns to waiting for new commands
       client should not send or expect anything more for this operation
     otherwise, if err=0, proceed...

 3 - client sends exactly 12 bytes of data
     right-pad with 0x00 or truncate to 12 bytes as necessary

     drive is busy for up to 20 seconds while searching all 80 IDs for a match
     drive does not send anything during this time
     client must not send anything during this time

 4 - drive sends another FDC-mode response block
     If a match was found:     err:0  dat:sector-number len:logical-sector-size-bytes
     If a match was not found: err:60 dat:255 len:logical-sector-size-bytes

There seems to be no way to search for multiple matching records.
You (apparently) can't supply any sector-number parameter to start searching after a previously found match to find the next match,
and repeating the same search just produces the same result which is the first match counting from physical sector 0.

github/bkw777/pdd.sh has an implementation of the client side of this and is working with real TPDD drives.

dlplus has an implementation of the server side of this and is working with pdd.sh.

(a) FDC-mode 8-byte response block common to all FDC-mode commands:
  2 bytes = ascii hex pair representing a uint_8 for error/status code (err:#) 0=success, >0 = various errors & conditions
  2 bytes = ascii hex pair representing a uint_8 for result data (dat:#) meaning & valid values depends on command
  4 bytes = 2 ascii hex pairs representing a uint_16 (msb-first) for length or offset (len:#) meaning & valid values depends on command
